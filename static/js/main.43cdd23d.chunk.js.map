{"version":3,"sources":["config/imgs/IMG_2886.jpg","config/imgs/IMG_0333.jpg","config/imgs/hangman.png","config/imgs/zombiehunt.png","config/imgs/shark.png","config/imgs/tang.jpg","config/home.js","config/projects.js","config/navtop.js","config/fish.js","config/navbot.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","lib","className","header","image","Cardback","Row_default","src","Me","alt","s","href","Projects","Hangman","ZombieHunt","Nav","brand","right","React","Component","Fish","imageSrc","Shark","Tang","Foot","id","copyrights","moreLinks","links","App","HashRouter","navtop_Nav","Switch","Route","path","component","exact","navbot_Foot","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.43cdd23d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_2886.2ffa1825.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_0333.e03502fb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hangman.32df1f56.png\";","module.exports = __webpack_public_path__ + \"static/media/zombiehunt.ac59c2e7.png\";","module.exports = __webpack_public_path__ + \"static/media/shark.895e2b86.png\";","module.exports = __webpack_public_path__ + \"static/media/tang.9f97d2fe.jpg\";","import React from \"react\";\nimport { Card, CardTitle, Col } from \"react-materialize\";\nimport Cardback from \"./imgs/IMG_2886.jpg\";\nimport Me from \"./imgs/IMG_0333.jpg\";\nimport Row from \"react-materialize/lib/Row\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Card className=\"small\" header={<CardTitle image={Cardback} />}>\n        My name is Adam Olson and you have landed at my website. I went to\n        school at the U of M for full stack web development and I am very\n        passionate about coding. I am also a father and an avid aquarist. If you\n        have any questions about coding or aquariums I would love to talk to you\n        about it!\n      </Card>\n      <div className=\"container contain\">\n        <Row>\n          <img className=\"circle reponsive-img profile\" src={Me} alt=\"me\" />\n          <Col s={6}>\n            <ul className=\"collapsible expandable\">\n              <li>\n                <div className=\"collapsible-header\">\n                  <i className=\"material-icons\">contact_phone</i>\n                  Phone\n                </div>\n                <div className=\"collapsible-body\">\n                  <span>952-221-8894</span>\n                </div>\n              </li>\n              <li>\n                <div className=\"collapsible-header\">\n                  <i className=\"material-icons\">contact_mail</i>\n                  Email\n                </div>\n                <div className=\"collapsible-body\">\n                  <span>olsoa4@hotmail.com</span>\n                </div>\n              </li>\n              <li>\n                <div className=\"collapsible-header\">\n                  <i className=\"material-icons\">whatshot</i>\n                  Github\n                </div>\n                <div className=\"collapsible-body\">\n                  <a href=\"https://github.com/olsoa4\">olsoa4</a>\n                </div>\n              </li>\n            </ul>\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Col, Row } from \"react-materialize\";\nimport Hangman from \"./imgs/hangman.png\";\nimport ZombieHunt from \"./imgs/zombiehunt.png\";\nconst Projects = () => {\n  return (\n    <div className=\"container contain\">\n      <Row className=\"\">\n        <Col s={6} className=\"\">\n          <img className=\"project\" src={Hangman} alt=\"hangman\" />\n          <a href=\"https://olsoa4.github.io/hangman.github.io/\">Hangman</a>\n        </Col>\n        <Col s={6} className=\"\">\n          <img className=\"project\" src={ZombieHunt} alt=\"ZombieHunt\" />\n          <a href=\"https://zombiehunt.herokuapp.com/\">Zombie Hunt</a>\n          <p>this game is multiplayer and reqiures at least 2 people</p>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport { Navbar, NavItem } from \"react-materialize\";\n\nexport default class Nav extends React.Component {\n  render() {\n    return (\n      <Navbar brand=\"Adam Olson\" className=\"\" right>\n        <NavItem href=\"/projects\">Projects</NavItem>\n        <NavItem href=\"/fish\">Fish</NavItem>\n        <NavItem href=\"/\">Home</NavItem>\n      </Navbar>\n    );\n  }\n}\n","import React from \"react\";\nimport { Parallax } from \"react-materialize\";\nimport Shark from \"./imgs/shark.png\";\nimport Tang from \"./imgs/tang.jpg\";\n\nconst Fish = () => {\n  return (\n    <div>\n      <Parallax imageSrc={Shark} />\n      <div className=\"section\">\n        <div className=\"row container contain\">\n          <h2 className=\"header\">Reefs, fish and you.</h2>\n          <p className=\"grey-text text-darken-3 lighten-3\">\n            I am an active keeper of saltwater reefs and personal advocate for\n            reef conservation around the globe. If you would like more\n            information on how you can help with conservation efforts please\n            visit the National Oceanic and Atmospheric Administration\n            https://coralreef.noaa.gov/\n          </p>\n        </div>\n      </div>\n      <Parallax imageSrc={Tang} />\n    </div>\n  );\n};\nexport default Fish;\n","import React from \"react\";\nimport { Footer } from \"react-materialize\";\n\nexport default class Foot extends React.Component {\n  render() {\n    return (\n      <Footer\n        id=\"pagefooter\"\n        copyrights=\"&copy 2015 Copyright Text\"\n        moreLinks={\n          <a\n            className=\"grey-text text-darken-3 right\"\n            href=\"https://github.com/olsoa4\"\n          >\n            My Github\n          </a>\n        }\n        links={\n          <ul>\n            <li>\n              <a className=\"grey-text text-darken-2\" href=\"/\">\n                Home\n              </a>\n            </li>\n            <li>\n              <a className=\"grey-text text-darken-2\" href=\"/projects\">\n                Projects\n              </a>\n            </li>\n            <li>\n              <a className=\"grey-text text-darken-2\" href=\"/fish\">\n                Fish\n              </a>\n            </li>\n          </ul>\n        }\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./config/home.js\";\nimport Projects from \"./config/projects.js\";\nimport Nav from \"./config/navtop.js\";\nimport Fish from \"./config/fish.js\";\nimport Foot from \"./config/navbot.js\";\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div>\n          <Nav />\n          <div>\n            <Switch>\n              <Route path=\"/\" component={Home} exact />\n              <Route path=\"/projects\" component={Projects} />\n              <Route path=\"/fish\" component={Fish} />\n            </Switch>\n          </div>\n          <Foot />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}